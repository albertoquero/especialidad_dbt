
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'curso_data_eng'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
docs-paths: ["docs"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

on-run-start:
  - "alter warehouse {{ target.warehouse }} resume if suspended;"
# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

vars:
  budget_date: '2024-10-01'

#Configuracion de TESTs
data_tests:
  curso_data_eng:
    certificacion:
      +enabled: true
      +schema: "SINGULAR_TEST_DBT_PROJECT"
      +database: "{{ env_var('DBT_DB_USER') ~ '_CERT_' ~ env_var('DBT_ENVIRONMENTS_LAYER') ~ '_BRONZE_DB' }}"
      +store_failures: true
      #+severity: "error"
    curso_data_engineer:
      +enabled: false

#Configuraciones de SEEDS
seeds:
  curso_data_eng:
    curso_data_engineer:
      +enabled: false
      +database: "{{ env_var('DBT_DB_USER') }}_{{ env_var('DBT_ENVIRONMENTS_LAYER') }}_BRONZE_DB" 
      +schema: "SEEDS"
      +tags: ['curso']
    certificacion:
      +enabled: true
      +database: "{{ env_var('DBT_DB_USER') }}_CERT_{{ env_var('DBT_ENVIRONMENTS_LAYER') }}_BRONZE_DB"  
      +schema: "SEEDS"
      +tags: ['cert']
      +alias: persona_dbt_project_file
      #+pre_hook: "SELECT 'ejecucion dbt project.yml pre_hook' consulta from dual;" #Se ejecuta antes que el yml a nivel de seed y posteriormente a un paquete
      #+post_hook: "SELECT 'ejecucion dbt_project.yml post_hook' consulta from dual;"
  
#Configuraciones de SOURCES
sources:
  curso_data_eng:
    curso_data_engineer:
      +enabled: false
    certificacion:
      +enabled: true
      #+event_time: Se usa para tema de microparticiones
      +freshness:
        warn_after:
          count: 10
          period: hour
        error_after:
          count: 1000
          period: day
      #+meta:
        #key:value
#Configuraciones de SNAPSHOTS
snapshots:
  curso_data_eng:
    curso_data_engineer:
      +enabled: false

#Configuraciones de MODELOS
models:
  curso_data_eng:
    curso_data_engineer:
      +enabled: false #desactivo todo lo que hay en el directorio para que no lo tenga en cuenta por conflicto de nombres
    certificacion:
      google_sheets:
        +database: "{{ env_var('DBT_DB_USER') }}_CERT_{{ env_var('DBT_ENVIRONMENTS_LAYER') }}_SILVER_DB"
        +materialized: view

#DESCOMENTAR ESTO PARA EL CURSO

#  curso_data_eng:
    # Applies to all files under models/example/
#    staging:
#      +materialized: view
#      +database: "{{ env_var('DBT_DB_USER') }}_{{ env_var('DBT_ENVIRONMENTS_LAYER') }}_SILVER_DB"
#      +tags: ['staging']
#      google_sheets:
#        +schema: google_sheets
#        +tags: ['google_sheets']
#      sql_server_dbo:
#        +schema: sql_server_dbo
#        +tags: ['sql_server_dbo']
#      example:
#        +tags: ['example']
#        +schema: example
#    marts:
#      +database: "{{ env_var('DBT_DB_USER') }}_{{ env_var('DBT_ENVIRONMENTS_LAYER') }}_GOLD_DB"
#      +materialized: table
#      +tags: ['marts']
##      core:
#        +schema: core
#      marketing:
#        +schema: marketing
#      product:
#        +schema: product
